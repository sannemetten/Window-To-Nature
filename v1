/*
 * This sketch communicates with Arduino to play video and audio
 * RFID tag: change video scene
 * Ultrasonic ranger sensor: change volume of video based on approximity
 *
 * 
 *
 * Created by Sanne Metten - December 2022
 */

//--------------------------------------------------------------------------------------------//
import processing.serial.*;
import processing.video.*;

Movie myMovie[]; // create an array for the videos


int state;         // Variable to store the RFID video state
int index;          // Variable to store the video array


Serial myPort; // The serial port
String val;     // Data received from the serial port

int distance;
int RFIDtag;

//--------------------------------------------------------------------------------------------//
void setup() {
  // size(540, 960); // test size of processing window
  fullScreen(2); // display on fulllscreen on the second screen
  // Load a soundfile from the /data folder of the sketch and play it back

  myMovie = new Movie[6]; //create instances of how many videos there are [amount of videos]

  //asign video file to the instances
  myMovie[0] = new Movie(this, "bos.mp4");
  myMovie[1] = new Movie(this, "lavendel.mp4");
  myMovie[2] = new Movie(this, "strand.mp4");
  myMovie[3] = new Movie(this, "winter.mp4");
  myMovie[4] = new Movie(this, "zomer.mp4");
  myMovie[5] = new Movie(this, "cows.mp4");

  myPort = new Serial(this, "COM5", 9600);
  // don't generate a serialEvent() unless you get a newline character:
  myPort.bufferUntil('\n');
}

//--------------------------------------------------------------------------------------------//
void draw() {
  background(0);

  // Check if all the videos are in the located "data" folder
  if (myMovie[index].available() ) {
    myMovie[index].read();
  }

  image(myMovie[index], 0, 0, width, height);

//Wat hieronder binnenkomt vanuit de Serial Monitor is bijv. 20,04DD1C12AB4A84)
  if ( myPort.available() > 0)
  {  // If data is available,
    val = myPort.readStringUntil('\n');         // read it and store it in val
    if (val!=null) {
      String[] data = splitTokens(val, ",");
      String distance = data[0];
      String RFIDtag = data[1];
    }
  }
  println(RFIDtag); //print it out in the console


  //Checks the RFID tag and gives it a state

  if (RFIDtag.equals("04DD1C12AB4A84")) {
    state = 0;
  }
  if (RFIDtag.equals("04DD1C12AB4A84")) {
    state = 1;
  }
  if (RFIDtag.equals("045E1812AB4A85")) {
    state = 2;
  }
  if (RFIDtag.equals("04F51712AB4A84")) {
    state = 3;
  }
  if (RFIDtag.equals("04411812AB4A85")) {
    state = 4;
  }
  if (RFIDtag.equals("04AAC4D27F6580")) {
    state = 5;
  }


  //---Video player based on the selected RFID card -------------//
  /*If the state is changed to 1, it will play video 1 */



//Ik weet het, dit is totaal niet efficient, maar hoe zeg je dat je bijv. myMovie[]-myMovie[1].pause(); wil?? 
//Dus ik wil de hele array myMovie[].pause BEHALVE de movie die hij in de switch-case gaat aansturen
  switch(state) {
  case 0:
    myMovie[1].pause();
    myMovie[2].pause();
    myMovie[3].pause();
    myMovie[4].pause();
    myMovie[5].pause();


    myMovie[0].loop();
    myMovie[0].volume(1); // I NEED TO CHANGE THIS FUNCTION WITH ULTRASONIC SENSOR (distance)
    // myMovie[0].volume(distance);
    index = 0;

    break;
  case 1:
    // currentMovie.pause();
    myMovie[0].pause();
    myMovie[2].pause();
    myMovie[3].pause();
    myMovie[4].pause();
    myMovie[5].pause();

    myMovie[1].loop();
    myMovie[1].volume(1); // I NEED TO CHANGE THIS FUNCTION WITH ULTRASONIC SENSOR (distance)
    // myMovie[1].volume(distance);
    index = 1;

    break;
  case 2:
    myMovie[0].pause();
    myMovie[1].pause();
    myMovie[3].pause();
    myMovie[4].pause();
    myMovie[5].pause();


    myMovie[2].loop();
    myMovie[2].volume(1); // I NEED TO CHANGE THIS FUNCTION WITH ULTRASONIC SENSOR (distance)
    // myMovie[2].volume(distance);
    index = 2;
    break;
  case 3:
    myMovie[0].pause();
    myMovie[1].pause();
    myMovie[2].pause();
    myMovie[4].pause();
    myMovie[5].pause();


    myMovie[3].loop();
    myMovie[3].volume(1); // I NEED TO CHANGE THIS FUNCTION WITH ULTRASONIC SENSOR (distance)
    // myMovie[3].volume(distance);
    index = 3;
    break;
  case 4:
    myMovie[0].pause();
    myMovie[1].pause();
    myMovie[2].pause();
    myMovie[3].pause();
    myMovie[5].pause();


    myMovie[4].loop();
    myMovie[4].volume(1); // I NEED TO CHANGE THIS FUNCTION WITH ULTRASONIC SENSOR (distance)
    // myMovie[4].volume(distance);
    index = 4;
    break;
  case 5:
    myMovie[0].pause();
    myMovie[1].pause();
    myMovie[2].pause();
    myMovie[3].pause();
    myMovie[4].pause();


    myMovie[5].loop();
    myMovie[5].volume(1); // I NEED TO CHANGE THIS FUNCTION WITH ULTRASONIC SENSOR (distance)
    // myMovie[4].volume(distance);
    index = 5;
    break;
  }

  /*
  if (distance <= 10) {
   movie.volume(1);
   } else if (distance > 10 && distance < 20) {
   movie.volume(0.8);
   } else if (distance > 20 && distance < 50) {
   movie.volume(0.3);
   } else if (distance > 50) {
   movie.volume(0);
   }
   */
}
